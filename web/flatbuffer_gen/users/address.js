"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.Address = void 0;
var flatbuffers = require("flatbuffers");
var geo_js_1 = require("../users/geo.js");
var Address = /** @class */ (function () {
    function Address() {
        this.bb = null;
        this.bb_pos = 0;
    }
    Address.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    Address.getRootAsAddress = function (bb, obj) {
        return (obj || new Address()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    Address.getSizePrefixedRootAsAddress = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new Address()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    Address.prototype.street = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    Address.prototype.city = function (optionalEncoding) {
        var offset = this.bb.__offset(this.bb_pos, 6);
        return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
    };
    Address.prototype.geo = function (obj) {
        var offset = this.bb.__offset(this.bb_pos, 8);
        return offset ? (obj || new geo_js_1.Geo()).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
    };
    Address.startAddress = function (builder) {
        builder.startObject(3);
    };
    Address.addStreet = function (builder, streetOffset) {
        builder.addFieldOffset(0, streetOffset, 0);
    };
    Address.addCity = function (builder, cityOffset) {
        builder.addFieldOffset(1, cityOffset, 0);
    };
    Address.addGeo = function (builder, geoOffset) {
        builder.addFieldOffset(2, geoOffset, 0);
    };
    Address.endAddress = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    return Address;
}());
exports.Address = Address;
