// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Geo } from '../users/geo.js';


export class Address {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Address {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsAddress(bb:flatbuffers.ByteBuffer, obj?:Address):Address {
  return (obj || new Address()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsAddress(bb:flatbuffers.ByteBuffer, obj?:Address):Address {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Address()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

street():string|null
street(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
street(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

city():string|null
city(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
city(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

geo(obj?:Geo):Geo|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new Geo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startAddress(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addStreet(builder:flatbuffers.Builder, streetOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, streetOffset, 0);
}

static addCity(builder:flatbuffers.Builder, cityOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, cityOffset, 0);
}

static addGeo(builder:flatbuffers.Builder, geoOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, geoOffset, 0);
}

static endAddress(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
