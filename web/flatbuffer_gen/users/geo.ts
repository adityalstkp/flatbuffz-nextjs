// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

export class Geo {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Geo {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGeo(bb:flatbuffers.ByteBuffer, obj?:Geo):Geo {
  return (obj || new Geo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGeo(bb:flatbuffers.ByteBuffer, obj?:Geo):Geo {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Geo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

lat():string|null
lat(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
lat(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

long():string|null
long(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
long(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startGeo(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addLat(builder:flatbuffers.Builder, latOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, latOffset, 0);
}

static addLong(builder:flatbuffers.Builder, longOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, longOffset, 0);
}

static endGeo(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createGeo(builder:flatbuffers.Builder, latOffset:flatbuffers.Offset, longOffset:flatbuffers.Offset):flatbuffers.Offset {
  Geo.startGeo(builder);
  Geo.addLat(builder, latOffset);
  Geo.addLong(builder, longOffset);
  return Geo.endGeo(builder);
}
}
