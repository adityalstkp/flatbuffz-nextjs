"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.Users = void 0;
var flatbuffers = require("flatbuffers");
var user_js_1 = require("../users/user.js");
var Users = /** @class */ (function () {
    function Users() {
        this.bb = null;
        this.bb_pos = 0;
    }
    Users.prototype.__init = function (i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    };
    Users.getRootAsUsers = function (bb, obj) {
        return (obj || new Users()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    Users.getSizePrefixedRootAsUsers = function (bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new Users()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    };
    Users.prototype.list = function (index, obj) {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? (obj || new user_js_1.User()).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
    };
    Users.prototype.listLength = function () {
        var offset = this.bb.__offset(this.bb_pos, 4);
        return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
    };
    Users.startUsers = function (builder) {
        builder.startObject(1);
    };
    Users.addList = function (builder, listOffset) {
        builder.addFieldOffset(0, listOffset, 0);
    };
    Users.createListVector = function (builder, data) {
        builder.startVector(4, data.length, 4);
        for (var i = data.length - 1; i >= 0; i--) {
            builder.addOffset(data[i]);
        }
        return builder.endVector();
    };
    Users.startListVector = function (builder, numElems) {
        builder.startVector(4, numElems, 4);
    };
    Users.endUsers = function (builder) {
        var offset = builder.endObject();
        return offset;
    };
    Users.createUsers = function (builder, listOffset) {
        Users.startUsers(builder);
        Users.addList(builder, listOffset);
        return Users.endUsers(builder);
    };
    return Users;
}());
exports.Users = Users;
